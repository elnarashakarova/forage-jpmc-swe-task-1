From 879221fec2b863d37d5b493f02a530a8098ef6ef Mon Sep 17 00:00:00 2001
From: Joe Ferrer <joe@theforage.com>
Date: Wed, 1 Mar 2023 00:11:51 +1100
Subject: [PATCH 1/3] Re-add sample unit test

---
 client_test.py | 25 +++++++++++++++++++++++++
 1 file changed, 25 insertions(+)
 create mode 100644 client_test.py

diff --git a/client_test.py b/client_test.py
new file mode 100644
index 0000000..af2bf26
--- /dev/null
+++ b/client_test.py
@@ -0,0 +1,25 @@
+import unittest
+from client3 import getDataPoint
+
+class ClientTest(unittest.TestCase):
+  def test_getDataPoint_calculatePrice(self):
+    quotes = [
+      {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+    ]
+    """ ------------ Add the assertion below ------------ """
+
+  def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
+    quotes = [
+      {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+    ]
+    """ ------------ Add the assertion below ------------ """
+
+
+  """ ------------ Add more unit tests ------------ """
+
+
+
+if __name__ == '__main__':
+    unittest.main()
-- 
2.25.1


From f31cf2704bd34e4b853a8c4f4ecc5c2e99f7383e Mon Sep 17 00:00:00 2001
From: Elnara Shakarova <elnarashakarova@gmail.com>
Date: Fri, 26 Apr 2024 17:08:44 +0200
Subject: [PATCH 2/3] chore: test push

---
 .gitignore    | 1 +
 test_file.txt | 0
 2 files changed, 1 insertion(+)
 create mode 100644 .gitignore
 create mode 100644 test_file.txt

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..ae412d6
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1 @@
+env/
\ No newline at end of file
diff --git a/test_file.txt b/test_file.txt
new file mode 100644
index 0000000..e69de29
-- 
2.25.1


From 06812fb388a2c3ce3be7706e945375779e594928 Mon Sep 17 00:00:00 2001
From: Elnara Shakarova <elnarashakarova@gmail.com>
Date: Fri, 26 Apr 2024 17:08:44 +0200
Subject: [PATCH 3/3] Feat: Implemented getRatio method, fixed print statements
 for displaying correct price ratios, and adjusted computation of stock prices
 in getDataPoint method.

---
 .gitignore |  1 +
 client3.py | 31 +++++++++++++++++++++++--------
 2 files changed, 24 insertions(+), 8 deletions(-)
 create mode 100644 .gitignore

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..ae412d6
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1 @@
+env/
\ No newline at end of file
diff --git a/client3.py b/client3.py
index 3fc09b7..af9967b 100644
--- a/client3.py
+++ b/client3.py
@@ -32,28 +32,43 @@ N = 500
 def getDataPoint(quote):
     """ Produce all the needed values to generate a datapoint """
     """ ------------- Update this function ------------- """
-    stock = quote['stock']
-    bid_price = float(quote['top_bid']['price'])
-    ask_price = float(quote['top_ask']['price'])
-    price = bid_price
+    stock = quote["stock"]
+    bid_price = float(quote["top_bid"]["price"])
+    ask_price = float(quote["top_ask"]["price"])
+    price = (bid_price + ask_price) / 2
     return stock, bid_price, ask_price, price
 
 
 def getRatio(price_a, price_b):
     """ Get ratio of price_a and price_b """
     """ ------------- Update this function ------------- """
-    return 1
+    if price_a == 0:
+        return "Price cannot be zero!"
+    else:
+        # ratio = price_a / price_b
+        # return ratio
+        return price_a / price_b
 
 
 # Main
 if __name__ == "__main__":
     # Query the price once every N seconds.
     for _ in iter(range(N)):
-        quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+        quotes = json.loads(
+            urllib.request.urlopen(QUERY.format(random.random())).read()
+        )
+        datapoints = []
 
         """ ----------- Update to get the ratio --------------- """
         for quote in quotes:
             stock, bid_price, ask_price, price = getDataPoint(quote)
-            print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+            print(
+                "Quoted %s at (bid:%s, ask:%s, price:%s)"
+                % (stock, bid_price, ask_price, price)
+            )
+            datapoints.append(price)
 
-        print("Ratio %s" % getRatio(price, price))
+        if len(datapoints) >= 2:
+            price_a = datapoints[0]
+            price_b = datapoints[1]
+            print("Ratio %s" % getRatio(price_a, price_b))
-- 
2.25.1

